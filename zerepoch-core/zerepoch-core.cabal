cabal-version: 2.4
name: zerepoch-core
version: 0.1.0.0
license: Apache-2.0
license-files:
  LICENSE
  NOTICE
maintainer: rmourey_jr@blockchain-company.io
author: Zerepoch Core Team
tested-with: ghc ==8.2.2 ghc ==8.4.3 ghc ==8.6.1
synopsis: Language library for Zerepoch Core
description:
    Pretty-printer, parser, and typechecker for Zerepoch Core.
category: Language, Zerepoch
build-type: Simple
extra-doc-files: README.md
extra-source-files:
    cost-model/data/builtinCostModel.json
    cost-model/data/cekMachineCosts.json
    cost-model/data/benching.csv
    cost-model/data/*.R

source-repository head
    type: git
    location: https://github.com/The-Blockchain-Company/zerepoch

common lang
    default-language: Haskell2010
    default-extensions: ExplicitForAll FlexibleContexts ScopedTypeVariables
                        DeriveGeneric StandaloneDeriving DeriveLift
                        GeneralizedNewtypeDeriving DeriveFunctor DeriveFoldable
                        DeriveTraversable DerivingStrategies DerivingVia
    ghc-options: -Wall -Wnoncanonical-monad-instances
                 -Wincomplete-uni-patterns -Wincomplete-record-updates
                 -Wredundant-constraints -Widentities
                 -Wnoncanonical-monoid-instances
                 -Wunused-packages

library
    import: lang
    exposed-modules:
        ZerepochCore
        ZerepochCore.Check.Normal
        ZerepochCore.Check.Scoping
        ZerepochCore.Check.Uniques
        ZerepochCore.Check.Value
        ZerepochCore.Constant
        ZerepochCore.Constant.Dynamic.Emit
        ZerepochCore.Core
        ZerepochCore.Data
        ZerepochCore.DataFilePaths
        ZerepochCore.DeBruijn
        ZerepochCore.Default
        ZerepochCore.Error
        ZerepochCore.Evaluation.Machine.BuiltinCostModel
        ZerepochCore.Evaluation.Machine.Ck
        ZerepochCore.Evaluation.Machine.CostModelInterface
        ZerepochCore.Evaluation.Machine.ExBudget
        ZerepochCore.Evaluation.Machine.ExMemory
        ZerepochCore.Evaluation.Machine.Exception
        ZerepochCore.Evaluation.Machine.MachineParameters
        ZerepochCore.Evaluation.Result
        ZerepochCore.Examples.Builtins
        ZerepochCore.Examples.Data.Data
        ZerepochCore.Examples.Data.InterList
        ZerepochCore.Examples.Data.List
        ZerepochCore.Examples.Data.Pair
        ZerepochCore.Examples.Data.Shad
        ZerepochCore.Examples.Data.TreeForest
        ZerepochCore.Examples.Data.Vec
        ZerepochCore.Examples.Everything
        ZerepochCore.Flat
        ZerepochCore.FsTree
        ZerepochCore.Generators
        ZerepochCore.Generators.AST
        ZerepochCore.Generators.Interesting
        ZerepochCore.Generators.NEAT.Common
        ZerepochCore.Generators.NEAT.Spec
        ZerepochCore.Generators.NEAT.Term
        ZerepochCore.Generators.NEAT.Type
        ZerepochCore.Generators.Test
        ZerepochCore.Lexer
        ZerepochCore.Mark
        ZerepochCore.MkPlc
        ZerepochCore.Name
        ZerepochCore.Normalize
        ZerepochCore.Normalize.Internal
        ZerepochCore.Parser
        ZerepochCore.Pretty
        ZerepochCore.Quote
        ZerepochCore.Rename
        ZerepochCore.Rename.Internal
        ZerepochCore.Rename.Monad
        ZerepochCore.StdLib.Data.Bool
        ZerepochCore.StdLib.Data.ChurchNat
        ZerepochCore.StdLib.Data.Data
        ZerepochCore.StdLib.Data.Function
        ZerepochCore.StdLib.Data.Integer
        ZerepochCore.StdLib.Data.List
        ZerepochCore.StdLib.Data.Nat
        ZerepochCore.StdLib.Data.Pair
        ZerepochCore.StdLib.Data.ScottList
        ZerepochCore.StdLib.Data.ScottUnit
        ZerepochCore.StdLib.Data.Sum
        ZerepochCore.StdLib.Data.Unit
        ZerepochCore.StdLib.Everything
        ZerepochCore.StdLib.Meta
        ZerepochCore.StdLib.Meta.Data.Function
        ZerepochCore.StdLib.Meta.Data.Tuple
        ZerepochCore.StdLib.Type
        ZerepochCore.Subst

        ZerepochIR
        ZerepochIR.Analysis.RetainedSize
        ZerepochIR.Compiler
        ZerepochIR.Compiler.Definitions
        ZerepochIR.Compiler.Names
        ZerepochIR.Core
        ZerepochIR.Core.Instance
        ZerepochIR.Core.Instance.Flat
        ZerepochIR.Core.Instance.Pretty
        ZerepochIR.Core.Instance.Scoping
        ZerepochIR.Core.Plated
        ZerepochIR.Core.Type
        ZerepochIR.Error
        ZerepochIR.Generators.AST
        ZerepochIR.Mark
        ZerepochIR.MkPir
        ZerepochIR.Parser
        ZerepochIR.Purity
        ZerepochIR.Subst
        ZerepochIR.Transform.Beta
        ZerepochIR.Transform.DeadCode
        ZerepochIR.Transform.Inline
        ZerepochIR.Transform.LetFloat
        ZerepochIR.Transform.LetMerge
        ZerepochIR.Transform.RecSplit
        ZerepochIR.Transform.NonStrict
        ZerepochIR.Transform.Rename
        ZerepochIR.Transform.Substitute
        ZerepochIR.Transform.ThunkRecursions
        ZerepochIR.Transform.Unwrap
        ZerepochIR.TypeCheck
        
        UntypedZerepochCore
        UntypedZerepochCore.DeBruijn
        UntypedZerepochCore.Evaluation.Machine.Cek
        UntypedZerepochCore.Evaluation.Machine.Cek.Internal
        UntypedZerepochCore.Parser
        UntypedZerepochCore.Rename
        UntypedZerepochCore.Check.Uniques
        UntypedZerepochCore.Core.Type

        Common
        Crypto
        Data.ByteString.Hash
        Data.SatInt
        Data.Text.Prettyprint.Doc.Custom
        ErrorCode
        PlcTestUtils
        ZerepochPrelude
        Universe
    build-tool-depends: alex:alex -any, happy:happy >=1.17.1
    hs-source-dirs:
        zerepoch-core/src
        zerepoch-core/stdlib
        zerepoch-core/examples
        zerepoch-ir/src
        untyped-zerepoch-core/src
        generators
        prelude
        common
    other-modules:
        ZerepochCore.Analysis.Definitions
        ZerepochCore.Constant.Function
        ZerepochCore.Constant.Meaning
        ZerepochCore.Constant.Typed
        ZerepochCore.Core.Instance
        ZerepochCore.Core.Instance.Eq
        ZerepochCore.Core.Instance.Pretty
        ZerepochCore.Core.Instance.Pretty.Classic
        ZerepochCore.Core.Instance.Pretty.Common
        ZerepochCore.Core.Instance.Pretty.Default
        ZerepochCore.Core.Instance.Pretty.Plc
        ZerepochCore.Core.Instance.Pretty.Readable
        ZerepochCore.Core.Instance.Recursive
        ZerepochCore.Core.Instance.Scoping
        ZerepochCore.Core.Plated
        ZerepochCore.Core.Type
        ZerepochCore.DeBruijn.Internal
        ZerepochCore.Default.Builtins
        ZerepochCore.Default.Universe
        ZerepochCore.Eq
        ZerepochCore.Evaluation.Machine.ExBudgetingDefaults
        ZerepochCore.Generators.Internal.Denotation
        ZerepochCore.Generators.Internal.Dependent
        ZerepochCore.Generators.Internal.Entity
        ZerepochCore.Generators.Internal.TypeEvalCheck
        ZerepochCore.Generators.Internal.TypedBuiltinGen
        ZerepochCore.Generators.Internal.Utils
        ZerepochCore.Lexer.Type
        ZerepochCore.Parsable
        ZerepochCore.Parser.Internal
        ZerepochCore.ParserCommon
        ZerepochCore.Pretty.Classic
        ZerepochCore.Pretty.ConfigName
        ZerepochCore.Pretty.ConfigName
        ZerepochCore.Pretty.Default
        ZerepochCore.Pretty.Plc
        ZerepochCore.Pretty.PrettyConst
        ZerepochCore.Pretty.Readable
        ZerepochCore.Pretty.Utils
        ZerepochCore.Size
        ZerepochCore.TypeCheck
        ZerepochCore.TypeCheck.Internal

        ZerepochIR.Analysis.Dependencies
        ZerepochIR.Analysis.Size
        ZerepochIR.Analysis.Usages
        ZerepochIR.Compiler.Datatype
        ZerepochIR.Compiler.Error
        ZerepochIR.Compiler.Let
        ZerepochIR.Compiler.Lower
        ZerepochIR.Compiler.Provenance
        ZerepochIR.Compiler.Recursion
        ZerepochIR.Compiler.Types
        ZerepochIR.Normalize
        ZerepochIR.TypeCheck.Internal

        UntypedZerepochCore.Analysis.Definitions
        UntypedZerepochCore.Core
        UntypedZerepochCore.Core.Instance
        UntypedZerepochCore.Core.Instance.Eq
        UntypedZerepochCore.Core.Instance.Flat
        UntypedZerepochCore.Core.Instance.Pretty
        UntypedZerepochCore.Core.Instance.Pretty.Classic
        UntypedZerepochCore.Core.Instance.Pretty.Default
        UntypedZerepochCore.Core.Instance.Pretty.Plc
        UntypedZerepochCore.Core.Instance.Pretty.Readable
        UntypedZerepochCore.Core.Instance.Recursive
        UntypedZerepochCore.Core.Plated
        UntypedZerepochCore.Evaluation.Machine.Cek.CekMachineCosts
        UntypedZerepochCore.Evaluation.Machine.Cek.ExBudgetMode
        UntypedZerepochCore.Evaluation.Machine.Cek.EmitterMode
        UntypedZerepochCore.Mark
        UntypedZerepochCore.Rename.Internal
        UntypedZerepochCore.Size
        UntypedZerepochCore.Subst
        UntypedZerepochCore.Transform.Simplify

        Data.Aeson.Flatten
        Data.Aeson.THReader
        Data.Functor.Foldable.Monadic
        Universe.Core
    build-depends:
        Stream -any,
        aeson -any,
        algebraic-graphs >= 0.3,
        array -any,
        barbies -any,
        base >=4.9 && <5,
        bifunctors -any,
        bimap -any,
        bytestring -any,
        bcc-crypto,
        cassava -any,
        cborg -any,
        composition-prelude >=1.1.0.1,
        containers -any,
        cryptonite -any,
        data-default-class -any,
        deepseq -any,
        dependent-map >=0.4.0.0,
        dependent-sum-template -any,
        deriving-aeson >= 0.2.3,
        deriving-compat -any,
        dlist -any,
        dom-lt -any,
        exceptions -any,
        extra -any,
        filepath -any,
        flat -any,
        ghc-prim -any,
        hashable,
        hedgehog >=1.0,
        integer-gmp -any,
        lazy-search -any,
        lens -any,
        megaparsec -any,
        mmorph -any,
        monoidal-containers,
        mtl -any,
        parser-combinators >= 0.4.0,
        prettyprinter >=1.1.0.1,
        prettyprinter-configurable -any,
        primitive -any,
        recursion-schemes -any,
        semigroupoids -any,
        semigroups -any,
        serialise -any,
        size-based -any,
        some < 1.0.3,
        sop-core -any,
        tasty -any,
        tasty-golden -any,
        tasty-hedgehog -any,
        tasty-hunit -any,
        template-haskell -any,
        text -any,
        th-lift -any,
        th-lift-instances -any,
        th-utilities -any,
        time -any,
        transformers -any,
        unordered-containers -any,
        witherable -any,
        word-array -any,
        bcc-crypto-class -any,
        zerepoch-contract -any

test-suite satint-test
  import: lang
  type:              exitcode-stdio-1.0
  main-is:           TestSatInt.hs
  ghc-options:       -Wall
  build-depends:     base >=4.9 && <5,
                     test-framework,
                     test-framework-hunit,
                     test-framework-quickcheck2,
                     HUnit,
                     QuickCheck,
                     zerepoch-core
  default-language:  Haskell2010
  hs-source-dirs:    zerepoch-core/satint-test

test-suite zerepoch-core-test
    import: lang
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: zerepoch-core/test
    ghc-options: -threaded -rtsopts -with-rtsopts=-N
    other-modules:
        Check.Spec
        CostModelInterface.Spec
        Evaluation.Machines
        Evaluation.Spec
        Names.Spec
        Normalization.Check
        Normalization.Type
        Pretty.Readable
        TypeSynthesis.Spec
    default-language: Haskell2010
    build-depends:
        base -any,
        bytestring -any,
        containers -any,
        filepath -any,
        flat -any,
        hedgehog -any,
        zerepoch-core -any,
        mmorph -any,
        mtl -any,
        prettyprinter -any,
        tasty -any,
        tasty-golden -any,
        tasty-hedgehog -any,
        tasty-hunit -any,
        text -any,
        transformers -any

test-suite zerepoch-ir-test
    import: lang
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: zerepoch-ir/test
    other-modules:
        NamesSpec
        ParserSpec
        TestLib
        TransformSpec
        TypeSpec
    build-depends:
        base >=4.9 && <5,
        zerepoch-core -any,
        filepath -any,
        flat -any,
        hedgehog -any,
        lens -any,
        megaparsec -any,
        mmorph -any,
        mtl -any,
        prettyprinter -any,
        tasty -any,
        tasty-hedgehog -any,
        text -any

test-suite untyped-zerepoch-core-test
    import: lang
    type: exitcode-stdio-1.0
    main-is: Spec.hs
    hs-source-dirs: untyped-zerepoch-core/test
    other-modules:
        Evaluation.Builtins
        Evaluation.Builtins.Common
        Evaluation.Builtins.Definition
        Evaluation.Builtins.MakeRead
        Evaluation.Golden
        Evaluation.Machines
        Transform.Simplify
    build-depends:
        base >=4.9 && <5,
        bytestring -any,
        hedgehog -any,
        flat -any,
        mtl -any,
        zerepoch-core -any,
        prettyprinter -any,
        tasty -any,
        tasty-golden -any,
        tasty-hedgehog -any,
        tasty-hunit -any,
        text -any

executable plc
    import: lang
    main-is: plc/Main.hs
    hs-source-dirs: executables
    other-modules:
        Common
        Parsers
    build-depends:
        zerepoch-core -any,
        base <5,
        bytestring -any,
        deepseq -any,
        flat -any,
        monoidal-containers -any,
        mtl -any,
        optparse-applicative -any,
        prettyprinter -any,
        text -any,
        transformers -any

executable uplc
    import: lang
    main-is: uplc/Main.hs
    hs-source-dirs: executables
    other-modules:
        Common
        Parsers
    build-depends:
        zerepoch-core -any,
        aeson -any,
        base <5,
        bytestring -any,
        deepseq -any,
        flat -any,
        monoidal-containers -any,
        mtl -any,
        optparse-applicative -any,
        prettyprinter -any,
        split -any,
        text -any,
        transformers -any

executable pir
    import: lang
    main-is: pir/Main.hs
    hs-source-dirs: executables
    build-depends:
        zerepoch-core -any,
        base <5,
        bytestring -any,
        flat -any,
        lens -any,
        optparse-applicative -any,
        transformers -any

-- This runs the microbenchmarks used to generate the cost models for built-in functions,
-- saving the results in cost-model/data/benching.csv.  It will take several hours.
benchmark cost-model-budgeting-bench
    import: lang
    type: exitcode-stdio-1.0
    main-is: Bench.hs
    other-modules:
        CriterionExtensions
        Nops
    hs-source-dirs: cost-model/budgeting-bench
    default-language: Haskell2010
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates -Wredundant-constraints -Widentities
    build-depends:
        zerepoch-core -any,
        base -any,
        bytestring -any,
        criterion -any,
        criterion-measurement -any,
        deepseq -any,
        directory -any,
        hedgehog -any,
        mtl -any,
        optparse-applicative -any,
        random -any


-- This reads the CSV data generated by cost-model-budgeting-bench, builds the models
-- using R, and saces them in cost-model/data/costModel.json
-- Benchmark sets the correct PWD and doesn't get run by `stack test`
benchmark update-cost-model
    import: lang
    type: exitcode-stdio-1.0
    main-is: UpdateCostModel.hs
    -- cost-model-creation should be its own library, but stack + HIE really don't like sub-libraries.
    hs-source-dirs: cost-model/create-cost-model
    default-language: Haskell2010
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates -Wredundant-constraints -Widentities
    build-depends:
        zerepoch-core -any,
        aeson-pretty -any,
        barbies -any,
        base -any,
        bytestring -any,
        cassava -any,
        exceptions -any,
        extra -any,
        inline-r -any,
        text -any,
        vector -any
    other-modules:
        CostModelCreation

-- The cost models for builtins are generated using R and converted into a JSON
-- form that can later be used to construct Haskell functions.  This tests
-- that the predictions of the Haskell version are identical to the R ones.
-- This test is problematic in CI: pretending that it's a benchmark will prevent
-- it from being run automatically but will still allow us to run it manually.
benchmark cost-model-test
    import: lang
    type: exitcode-stdio-1.0
    main-is: TestCostModels.hs
    hs-source-dirs: cost-model/test, cost-model/create-cost-model
    default-language: Haskell2010
    ghc-options: -threaded -rtsopts -with-rtsopts=-N -Wall -Wincomplete-uni-patterns
                 -Wincomplete-record-updates -Wredundant-constraints -Widentities
    build-depends:
        base -any,
        zerepoch-core -any,
        barbies -any,
        bytestring -any,
        cassava -any,
        exceptions -any,
        extra -any,
        hedgehog -any,
        inline-r -any,
        mmorph -any,
        text -any,
        vector -any
    other-modules:
        CostModelCreation

library index-envs
    import: lang
    hs-source-dirs: index-envs/src
    default-language: Haskell2010
    exposed-modules:
      Data.DeBruijnEnv
      Data.RandomAccessList.SkewBinary
    build-depends:
        base -any,
        containers -any,
        -- broken for ral-0.2 conflic with  bcc-binary:recursion-schemes
        ral == 0.1

benchmark index-envs-bench
    import: lang
    type: exitcode-stdio-1.0
    hs-source-dirs: index-envs/bench
    default-language: Haskell2010
    main-is: Main.hs
    build-depends:
        base -any,
        index-envs -any,
        criterion >= 1.5.9.0,
        random >= 1.2.0,
        -- broken for ral-0.2 conflic with  bcc-binary:recursion-schemes
        ral == 0.1

test-suite index-envs-test
    import: lang
    type: exitcode-stdio-1.0
    hs-source-dirs: index-envs/test
    default-language: Haskell2010
    main-is: TestRAList.hs
    build-depends:
        base -any,
        index-envs -any,
        tasty -any,
        tasty-hunit -any,
        tasty-quickcheck -any
